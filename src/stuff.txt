//checks for collision with walls
        if (snake.y[0] < 0) {
            running = false;
        }
        if (snake.y[0] > SCREEN_HEIGHT) {
            running = false;
        }
        if (snake.x[0] < 0) {
            running = false;
        }
        if (snake.x[0] > SCREEN_WIDTH) {
            running = false;
        }


//checks for collision with walls
        if (snake.y[0] < 0 || snake.y[0] > SCREEN_HEIGHT || snake.x[0] < 0 || snake.x[0] > SCREEN_WIDTH) {
            running = false;
        }

private static void wait(int ms) {
            try
            {
                Thread.sleep(ms);
            }
            catch(InterruptedException ex)
            {
                Thread.currentThread().interrupt();
            }
}

this.addComponentListener(new ComponentAdapter() {
    @Override
    public void componentResized(ComponentEvent e) {
    //super.componentResized(e);
    double newShortestSide = Math.max(getContentPane().getWidth(), getContentPane().getHeight());
    setBestSize(newShortestSide, curLongestSide, e);
    }
});
//(shortest side of new) / (longest side of old)
    //= multiplier for both of the component's dimensions.
    private void setBestSize(double newShortestSide, double curLongestSide, ComponentEvent e) {
        double multiplier = newShortestSide / curLongestSide;
        width = closestDivisible((int) (width * multiplier), 10);
        height = closestDivisible((int) (height * multiplier), 10);
        this.curLongestSide = Math.min(width, height);
        this.setPreferredSize(new Dimension(width, height));
        this.pack();
        gamePanel.resize = true;
    }
    private int closestDivisible(int a, int b) {
        return a - (a % b);
    }

// borderless
this.dispose();
this.setUndecorated(true);
this.pack();
this.setVisible(true);

TODO:
    1.MenuBars
        standard resolutions
            640 x 480   (480p)
            1280 x 720  (720p)
            1920 x 1080 (1080p)
            2560 x 1440 (1440p)
        fullscreen
        mute
    2. StartMenu
        Play button
        Options button
            fullscreen
        Sound effects and music volume slider
            plus clicking icon mutes
        Credits button


    ideas:
        wiggling tail

        changing color mechanic

        Save system for progression and settings

        Survive timer / wave mode

        make it beautyful elegant and quality of lify

        add an action queue so the game registers all keystrokes and
        executes them when possible, make this mode optional